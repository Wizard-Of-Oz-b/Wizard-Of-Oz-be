services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: shopapi
      POSTGRES_USER: shop
      POSTGRES_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"   # host 5433 -> container 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shop -d shopapi"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7
    # 내부 통신만 쓸 거면 ports 생략 가능
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  web:
    build: .
    env_file: .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      bash -lc "
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        exec gunicorn config.asgi:application -k uvicorn.workers.UvicornWorker
          --bind 0.0.0.0:8000
          --workers ${GUNICORN_WORKERS:-4} --threads ${GUNICORN_THREADS:-2}
          --log-level info --access-logfile - --error-logfile -
          --timeout 60 --graceful-timeout 30 --keep-alive 5
          --worker-tmp-dir /dev/shm --forwarded-allow-ips="*"
          --lifespan off
      "
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  worker:
    build: .
    env_file: .env.docker
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    entrypoint: [""]                               # ← 중요!
    command: bash -lc "celery -A config worker -l info"
    restart: unless-stopped

  beat:
    build: .
    env_file: .env.docker
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    entrypoint: [""]                               # ← 중요!
    command: bash -lc "celery -A config beat -l info"
    restart: unless-stopped

volumes:
  dbdata:
