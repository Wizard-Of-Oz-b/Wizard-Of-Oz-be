services:
  redis:
    image: redis:7-alpine
    command: ["redis-server","--save","","--appendonly","no","--maxmemory","128mb","--maxmemory-policy","allkeys-lru"]
    ports: ["6379:6379"]

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env.dev
    environment:
      DJANGO_ENV: dev
      UV_PROJECT_ENVIRONMENT: /opt/venv   # ← 추가 (안전장치)
      # PGSSLMODE: require
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on: [redis]
    command: >
      bash -lc "
        uv run python manage.py migrate --noinput &&
        uv run uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --reload
      "

  worker:
    user: "1000:1000"
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env.dev
    environment:
      DJANGO_ENV: dev
      UV_PROJECT_ENVIRONMENT: /opt/venv   # ← 추가
      # PGSSLMODE: require
    depends_on: [redis]
    volumes:
      - .:/app
    command: >
      bash -lc "uv run celery -A config worker -l info -c 1 -O fair --max-tasks-per-child=100"

  beat:
    user: "1000:1000"
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env.dev
    environment:
      DJANGO_ENV: dev
      UV_PROJECT_ENVIRONMENT: /opt/venv   # ← 추가
      # PGSSLMODE: require
    depends_on: [redis]
    volumes:
      - .:/app
    command: >
      bash -lc "uv run celery -A config beat -l info --max-interval=30"
