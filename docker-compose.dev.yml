version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: shopapi
      POSTGRES_USER: shop
      POSTGRES_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shop -d shopapi"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  web:
    build:
      context: .
      args:
        APP_UID: "${UID:-1000}"
        APP_GID: "${GID:-1000}"
    env_file: .env.docker           # 개발용 env 값 사용
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    ports:
      - "8000:8000"
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - .:/app
    command: >
      bash -lc "
        python manage.py migrate --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:8000/api/schema/ >/dev/null || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  worker:
    build:
      context: .
      args:
        APP_UID: "${UID:-1000}"
        APP_GID: "${GID:-1000}"
    env_file: .env.docker
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - .:/app
    command: >
      bash -lc "celery -A config worker -l info --concurrency=${CELERY_CONCURRENCY:-2}"
    restart: unless-stopped

  beat:
    build:
      context: .
      args:
        APP_UID: "${UID:-1000}"
        APP_GID: "${GID:-1000}"
    env_file: .env.docker
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - .:/app
      - beat-data:/data
    command: >
      bash -lc "celery -A config beat -l info -s /data/celerybeat-schedule"
    restart: unless-stopped

volumes:
  dbdata:
  beat-data:
